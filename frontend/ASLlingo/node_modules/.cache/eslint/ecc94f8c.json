[{"C:\\Users\\akars\\OneDrive\\Documents\\GitHub\\hacked-beta\\frontend\\ASLlingo\\src\\main.js":"1","C:\\Users\\akars\\OneDrive\\Documents\\GitHub\\hacked-beta\\frontend\\ASLlingo\\src\\App.vue":"2","C:\\Users\\akars\\OneDrive\\Documents\\GitHub\\hacked-beta\\frontend\\ASLlingo\\src\\router\\index.js":"3","C:\\Users\\akars\\OneDrive\\Documents\\GitHub\\hacked-beta\\frontend\\ASLlingo\\src\\views\\HomePage.vue":"4","C:\\Users\\akars\\OneDrive\\Documents\\GitHub\\hacked-beta\\frontend\\ASLlingo\\src\\components\\ModalComponent.vue":"5"},{"size":865,"mtime":1667231243000,"results":"6","hashOfConfig":"7"},{"size":519,"mtime":1667689035420,"results":"8","hashOfConfig":"7"},{"size":373,"mtime":1667710310416,"results":"9","hashOfConfig":"7"},{"size":10593,"mtime":1667752044020,"results":"10","hashOfConfig":"7"},{"size":12529,"mtime":1667751962919,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3r8m7c",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"C:\\Users\\akars\\OneDrive\\Documents\\GitHub\\hacked-beta\\frontend\\ASLlingo\\src\\main.js",[],[],"C:\\Users\\akars\\OneDrive\\Documents\\GitHub\\hacked-beta\\frontend\\ASLlingo\\src\\App.vue",[],[],"C:\\Users\\akars\\OneDrive\\Documents\\GitHub\\hacked-beta\\frontend\\ASLlingo\\src\\router\\index.js",[],[],"C:\\Users\\akars\\OneDrive\\Documents\\GitHub\\hacked-beta\\frontend\\ASLlingo\\src\\views\\HomePage.vue",[],[],"C:\\Users\\akars\\OneDrive\\Documents\\GitHub\\hacked-beta\\frontend\\ASLlingo\\src\\components\\ModalComponent.vue",["28","29"],[],"<template>\r\n    <ion-page>\r\n        <ion-header>\r\n        <ion-toolbar>\r\n            <ion-buttons slot=\"start\">\r\n            <ion-button color=\"medium\" @click=\"cancel\">\r\n                <ion-icon :md=\"icon.mdBack\" :ios=\"icon.iosBack\" ></ion-icon>\r\n            </ion-button>\r\n            </ion-buttons>\r\n            <ion-grid>\r\n                <ion-row style=\"margin-bottom:0;padding-bottom:0\">\r\n                    <ion-title style=\"margin-bottom:0;padding-bottom:0\">{{title}}</ion-title>\r\n                </ion-row>\r\n                <ion-row>\r\n                    <ion-label style=\"padding-left:1.2rem\">\r\n                        <ion-text :color=\"color\">\r\n                            <p><strong>{{difficulty}}</strong></p>\r\n                        </ion-text>\r\n                    </ion-label>\r\n                </ion-row>\r\n            </ion-grid>\r\n        </ion-toolbar>\r\n        </ion-header>\r\n        <ion-content :fullscreen=\"true\" v-if=\"difficulty=='Easy'\">\r\n            <div class=\"box\">\r\n                <div id=\"whiteSpace\"></div>\r\n                <ion-grid>\r\n                    <ion-row style=\"margin-bottom:0;padding-bottom:0\">\r\n                        <p style=\"margin-bottom:5px;padding-bottom:10px\" id=\"questionHeader\">{{question}}</p>\r\n                    </ion-row>\r\n                    <ion-row style=\"margin-top:0;padding-top:0\">\r\n                        <ion-col style=\"margin-top:0;padding-top:0\">\r\n                            <p style=\"margin-top:0;padding-top:0\" id=\"questionHint\">Hint: Click the Camera icon to select your choice.</p>\r\n                        </ion-col>\r\n                    </ion-row>\r\n                    <ion-row>\r\n                        <ion-col v-for=\"item in optionset1\" :key=\"item.id\" style=\"\">\r\n                            <ion-card>\r\n                                <img alt=\"Silhouette of mountains\" height=\"160\" width=\"160\" :src=item.link />\r\n                                <ion-card-header>\r\n                                    <ion-card-title>{{item.title}}</ion-card-title>\r\n                                </ion-card-header>\r\n                            </ion-card>\r\n                        </ion-col>\r\n                    </ion-row>\r\n                    <ion-row>\r\n                        <ion-col v-for=\"item in optionset2\" :key=\"item.id\" style=\"\">\r\n                            <ion-card>\r\n                                <img alt=\"Silhouette of mountains\" height=\"160\" width=\"160\" :src=item.link />\r\n                                <ion-card-header>\r\n                                    <ion-card-title>{{item.title}}</ion-card-title>\r\n                                </ion-card-header>\r\n                            </ion-card>\r\n                        </ion-col>\r\n                    </ion-row>\r\n                </ion-grid>        \r\n                <div style=\"text-align:center\">\r\n                    <ion-button @click=\"takeVideo\" shape=\"circle\" id=\"send\">\r\n                        <ion-icon :md=\"icon.md\" :ios=\"icon.ios\"></ion-icon>\r\n                    </ion-button>\r\n                </div>\r\n            </div>\r\n            <button id=\"modalButton\" style=\"display:none\"></button>\r\n            <ion-modal trigger=\"modalButton\" ref=\"modal\" :initial-breakpoint=\"0.25\" :breakpoints=\"[0, 0.25, 0.5, 0.75]\">\r\n              <ion-header>\r\n            <ion-toolbar class=\"ion-padding-horizontal\" >\r\n              <ion-text>\r\n                <p id=\"resultsModal\">Results:</p>\r\n              </ion-text>\r\n            </ion-toolbar>\r\n          </ion-header>\r\n                <ion-content class=\"ion-padding\">\r\n                  <ion-list :inset=\"true\">\r\n                  <ion-item>\r\n                    <ion-label>\r\n                      <ion-text :color=\"ansColor\"><h2>{{ansText}}</h2></ion-text>\r\n                    </ion-label>\r\n                  </ion-item>\r\n\r\n                  <ion-item>\r\n                    <ion-label>\r\n                      <ion-text color=\"success\"><h2>Correct Answer</h2></ion-text>\r\n                      <p>{{answer.title}}</p>\r\n                      <img :src=answer.link height=\"50px\" width=\"50px\" alt=\"Tasd\">\r\n                    </ion-label>\r\n                  </ion-item>\r\n\r\n                </ion-list>\r\n                </ion-content>\r\n            </ion-modal>\r\n        </ion-content>\r\n        <ion-content :fullscreen=\"true\" v-else>\r\n            <div class=\"box\">\r\n                <div id=\"whiteSpace\"></div>\r\n                <ion-grid>\r\n                    <ion-row style=\"margin-bottom:0;padding-bottom:0\">\r\n                        <p style=\"margin-bottom:5px;padding-bottom:10px\" id=\"questionHeader\">{{question}}</p>\r\n                    </ion-row>\r\n                    <ion-row style=\"margin-top:0;padding-top:0\">\r\n                        <ion-col style=\"margin-top:0;padding-top:0\">\r\n                            <p style=\"margin-top:0;padding-top:0\" id=\"questionHint\">Hint: Click the Camera icon to select your choice.</p>\r\n                        </ion-col>\r\n                    </ion-row>\r\n                </ion-grid>        \r\n                <div style=\"text-align:center\">\r\n                    <ion-img :src=\"link\" alt=\"Tasd\" style=\"margin-bottom:20px\"></ion-img>\r\n                    <ion-button @click=\"takeVideo\" shape=\"circle\" id=\"send\">\r\n                        <ion-icon :md=\"icon.md\" :ios=\"icon.ios\"></ion-icon>\r\n                    </ion-button>\r\n                </div>\r\n            </div>\r\n            <button id=\"modalButton\" style=\"display:none\"></button>\r\n            <ion-modal trigger=\"modalButton\" ref=\"modal\" :initial-breakpoint=\"0.25\" :breakpoints=\"[0, 0.25, 0.5, 0.75]\">\r\n              <ion-header>\r\n            <ion-toolbar class=\"ion-padding-horizontal\" >\r\n              <ion-text>\r\n                <p id=\"resultsModal\">Results:</p>\r\n              </ion-text>\r\n            </ion-toolbar>\r\n          </ion-header>\r\n                <ion-content class=\"ion-padding\">\r\n                <ion-list :inset=\"true\">\r\n                  <ion-item>\r\n                    <ion-label>\r\n                      <ion-text :color=\"ansColor\"><h2 style=\"font-size:1.5rem\">{{ansText}}</h2></ion-text>\r\n                    </ion-label>\r\n                  </ion-item>\r\n\r\n                  <ion-item>\r\n                    <ion-label>\r\n                      <ion-text color=\"success\"><h2>Correct Answer</h2></ion-text>\r\n                      <p>{{answer.title}}</p>\r\n                      <img :src=\"answer.link\" >\r\n                    </ion-label>\r\n                  </ion-item>\r\n\r\n                </ion-list>\r\n                </ion-content>\r\n            </ion-modal>\r\n            \r\n        </ion-content>\r\n    </ion-page>\r\n  </template>\r\n  \r\n  <script >\r\n    import {\r\n      IonContent,\r\n      IonIcon,\r\n      IonModal,\r\n      IonHeader,\r\n      IonTitle,\r\n      IonText,\r\n      IonCard,\r\n      IonCardHeader,\r\n        IonCardTitle,\r\n        IonList,\r\n        IonItem,\r\n        IonLabel,\r\n      IonToolbar,\r\n      IonPage,\r\n      IonButtons,\r\n      IonButton,\r\n      IonGrid, IonRow, IonCol, IonImg,\r\n      modalController,\r\n      loadingController \r\n    } from '@ionic/vue';\r\n    import { defineComponent } from 'vue';\r\n    import { cameraOutline, arrowBackOutline  } from 'ionicons/icons';\r\n    import {MediaCapture} from '@awesome-cordova-plugins/media-capture';\r\n  import {Capacitor} from '@capacitor/core';\r\n  import axios from 'axios';\r\n    export default defineComponent({\r\n      name: 'ModalVue',\r\n      components: { \r\n        IonContent,\r\n        IonCard, \r\n        IonLabel, \r\n        IonPage,\r\n        IonCardHeader,\r\n        IonList,\r\n        IonItem,\r\n        IonCardTitle,\r\n        IonHeader, \r\n        IonModal, \r\n        IonTitle, \r\n        IonToolbar, IonButtons, IonButton,IonIcon, IonGrid, IonRow, IonCol, IonImg,IonText },\r\n\r\n      data() {\r\n        return {\r\n          ansColor: 'danger',\r\n          ansText: 'Incorrect Answer!',\r\n          answerList: [\r\n            {\r\n              id: 1,\r\n              heading: \"Your Answer\",\r\n              link: \"https://ionicframework.com/docs/img/demos/thumbnail.svg\",\r\n              color: \"success\",\r\n              answer: \"answer\"\r\n            },\r\n            {\r\n              id: 2,\r\n              heading: \"Correct Answer\",\r\n              link: \"https://ionicframework.com/docs/img/demos/thumbnail.svg\",\r\n              color: \"success\",\r\n              answer: \"answer\"\r\n            }\r\n          ],\r\n            videoInfo: {},\r\n            icon: {\r\n                md: cameraOutline,\r\n                ios: cameraOutline,\r\n                mdBack: arrowBackOutline,\r\n                iosBack: arrowBackOutline\r\n            }\r\n        }\r\n      },\r\n      props: {\r\n        answer: {\r\n          type: Object,\r\n        },\r\n        id: {\r\n          type: Number,\r\n          default: null,\r\n        },\r\n        title: {\r\n          type: String,\r\n          default: null,\r\n        },\r\n        question: {\r\n          type: String,\r\n          default: null,\r\n        },\r\n        difficulty: {\r\n          type: String,\r\n          default: null,\r\n        },\r\n        color: {\r\n          type: String,\r\n          default: null,\r\n        },\r\n        optionset1: {\r\n          type: Array,\r\n          default: null,\r\n        },\r\n        optionset2: {\r\n          type: Array,\r\n          default: null,\r\n        },\r\n        link: {\r\n          type: String,\r\n          default: null,\r\n        },\r\n      },\r\n      // mounted(){document.getElementById(\"modalButton\").click();},\r\n      methods: {\r\n        cancel() {\r\n          return modalController.dismiss('cancel', this.videoInfo);\r\n        },\r\n\r\n        takeVideo: async function () {\r\n          const that = this // DEBUG\r\n        try {\r\n            \r\n          const options = {\r\n            duration: 4,\r\n            limit: 1,\r\n            quality: 1\r\n          };\r\n          const result = await MediaCapture.captureVideo(options);\r\n          this.videoInfo = result[0];\r\n          // console.log(\"videoInfo\", JSON.stringify(result[0]));\r\n          const blob = await fetch(\r\n            Capacitor.convertFileSrc(this.videoInfo.fullPath)\r\n          ).then(r => r.blob());\r\n          const formData = new FormData();\r\n          formData.append(\"file\", blob, this.videoInfo.name);\r\n          // convert video blob to base64\r\n          let reader = new FileReader();\r\n          reader.readAsDataURL(blob);\r\n          reader.onloadend = async function() {\r\n            let base64data = reader.result;\r\n            let trimmed = base64data.substring(base64data.indexOf(\",\") + 1);\r\n           console.log(trimmed); // DEBUG\r\n           const loading = await loadingController.create({\r\n            message: 'Please wait...'\r\n            });  \r\n            await loading.present();\r\n            \r\n          axios({\r\n            method: \"post\",\r\n            url: \"https://c220-2620-101-c040-85c-872-da75-28a3-1291.ngrok.io/upload/\",\r\n            data: JSON.stringify({\r\n              _data: trimmed\r\n            }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n          }).then((response) => {\r\n                loading.dismiss();\r\n                if (response.status == 200){\r\n                  // alert (JSON.stringify(response.data));\r\n                  document.getElementById(\"modalButton\").click();\r\n                  // search in json stringy for answer title\r\n                  if (JSON.stringify(response.data).includes(that.answer.title)) {\r\n                    that.ansColor = 'success';\r\n                    that.ansText = 'Correct Answer!';\r\n                  }\r\n                }\r\n          });\r\n          };\r\n        } catch (error) {\r\n            // NEVER PUT ALERT HERE\r\n          console.log(error);\r\n      }\r\n    }\r\n      },\r\n    });\r\n  </script>\r\n\r\n  <style scoped>\r\nion-button#send::part(native) {\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 100% !important;\r\n}\r\np#questionHeader{ \r\n  font-family: 'Ubuntu', sans-serif;\r\n  font-weight: 900;\r\n    font-size: 1.5rem;\r\n    text-align: center;\r\n    color: white; \r\n}\r\np#questionHint{ \r\n  font-family: 'Ubuntu', sans-serif;\r\n  font-weight: 400;\r\n    font-size: 1rem;\r\n    text-align: center;\r\n    color: white; \r\n}\r\np#resultsModal{ \r\n  font-family: 'Ubuntu', sans-serif;\r\n  font-weight: 900;\r\n    font-size: 1.2rem;\r\n    text-align: left;\r\n}\r\n.box {\r\n  width:100vw;\r\n  height:40rem;\r\n  display:inline-block;\r\n  padding-top:10px;\r\n  background:radial-gradient(100% 35% at top,#ff7454 99%,transparent 100%);\r\n\r\n}\r\nion-img {\r\n    height:100%;\r\n    width: 20rem !important;\r\n    margin: auto;\r\n    align-items: center;\r\n}\r\n\r\n</style>",{"ruleId":"30","severity":1,"message":"31","line":283,"column":12,"nodeType":"32","messageId":"33","endLine":283,"endColumn":23},{"ruleId":"30","severity":1,"message":"31","line":313,"column":11,"nodeType":"32","messageId":"33","endLine":313,"endColumn":22},"no-console","Unexpected console statement.","MemberExpression","unexpected"]