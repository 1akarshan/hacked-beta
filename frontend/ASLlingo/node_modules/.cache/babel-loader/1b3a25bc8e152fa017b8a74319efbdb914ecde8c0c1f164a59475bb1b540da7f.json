{"ast":null,"code":"import \"core-js/modules/es.json.stringify.js\";\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonButton, IonIcon } from '@ionic/vue';\nimport { defineComponent } from 'vue';\nimport { cameraOutline } from 'ionicons/icons';\nimport { MediaCapture } from '@awesome-cordova-plugins/media-capture';\nimport { Capacitor } from '@capacitor/core';\nimport axios from 'axios';\nexport default defineComponent({\n  name: 'HomePage',\n  components: {\n    IonContent,\n    IonIcon,\n    IonButton,\n    IonHeader,\n    IonPage,\n    IonTitle,\n    IonToolbar\n  },\n  data() {\n    return {\n      videoInfo: {},\n      icon: {\n        md: cameraOutline,\n        ios: cameraOutline\n      }\n    };\n  },\n  methods: {\n    takeVideo: async function () {\n      ``;\n      try {\n        const options = {\n          duration: 10,\n          limit: 1,\n          quality: 1\n        };\n        const result = await MediaCapture.captureVideo(options);\n        this.videoInfo = result[0];\n        // console.log(\"videoInfo\", JSON.stringify(result[0]));\n        const blob = await fetch(Capacitor.convertFileSrc(this.videoInfo.fullPath)).then(r => r.blob());\n        const formData = new FormData();\n        formData.append(\"file\", blob, this.videoInfo.name);\n        // convert video blob to base64\n        let reader = new FileReader();\n        reader.readAsDataURL(blob);\n        reader.onloadend = async function () {\n          let base64data = reader.result;\n          let trimmed = base64data.substring(base64data.indexOf(\",\") + 1);\n          console.log(trimmed);\n          axios({\n            method: \"post\",\n            url: \"https://8690-2620-101-c040-85c-d547-3027-b598-c03a.ngrok.io/upload/\",\n            data: JSON.stringify({\n              _data: trimmed\n            }),\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          }).then(response => {\n            alert(response.status);\n          });\n        };\n      } catch (error) {\n        alert(error);\n      }\n    }\n  }\n});","map":{"version":3,"mappings":";AA8BA,SAASA,UAAU,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,EAAEC,OAAM,QAAS,YAAY;AACrG,SAASC,eAAc,QAAS,KAAK;AACrC,SAASC,aAAY,QAAU,gBAAgB;AAC/C,SAAQC,YAAY,QAAO,wCAAwC;AACnE,SAAQC,SAAS,QAAO,iBAAiB;AACzC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAeJ,eAAe,CAAC;EAC7BK,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVb,UAAU;IACVM,OAAO;IACPD,SAAS;IACTJ,SAAS;IACTC,OAAO;IACPC,QAAQ;IACRC;EACF,CAAC;EACDU,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,CAAC,CAAC;MACbC,IAAI,EAAE;QACJC,EAAE,EAAET,aAAa;QACjBU,GAAG,EAAEV;MACP;IACF;EACF,CAAC;EACDW,OAAO,EAAE;IAEPC,SAAS,EAAE,kBAAkB;MAAE;MAE7B,IAAI;QACF,MAAMC,OAAM,GAAI;UACdC,QAAQ,EAAE,EAAE;UACZC,KAAK,EAAE,CAAC;UACRC,OAAO,EAAE;QACX,CAAC;QACD,MAAMC,MAAK,GAAI,MAAMhB,YAAY,CAACiB,YAAY,CAACL,OAAO,CAAC;QACvD,IAAI,CAACN,SAAQ,GAAIU,MAAM,CAAC,CAAC,CAAC;QAC1B;QACA,MAAME,IAAG,GAAI,MAAMC,KAAK,CACtBlB,SAAS,CAACmB,cAAc,CAAC,IAAI,CAACd,SAAS,CAACe,QAAQ,EACjD,CAACC,IAAI,CAACC,KAAKA,CAAC,CAACL,IAAI,EAAE,CAAC;QACrB,MAAMM,QAAO,GAAI,IAAIC,QAAQ,EAAE;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAER,IAAI,EAAE,IAAI,CAACZ,SAAS,CAACH,IAAI,CAAC;QAClD;QACA,IAAIwB,MAAK,GAAI,IAAIC,UAAU,EAAE;QAC7BD,MAAM,CAACE,aAAa,CAACX,IAAI,CAAC;QAC1BS,MAAM,CAACG,SAAQ,GAAI,kBAAiB;UAClC,IAAIC,UAAS,GAAIJ,MAAM,CAACX,MAAM;UAC9B,IAAIgB,OAAM,GAAID,UAAU,CAACE,SAAS,CAACF,UAAU,CAACG,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;UAC/DC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;UACtB9B,KAAK,CAAC;YACJmC,MAAM,EAAE,MAAM;YACdC,GAAG,EAAE,qEAAqE;YAC1EjC,IAAI,EAAEkC,IAAI,CAACC,SAAS,CAAC;cACnBC,KAAK,EAAET;YACT,CAAC,CAAC;YACJU,OAAO,EAAE;cACP,cAAc,EAAE;YAClB;UACA,CAAC,CAAC,CAACpB,IAAI,CAAEqB,QAAQ,IAAK;YACpBC,KAAK,CAACD,QAAQ,CAACE,MAAM,CAAC;UACxB,CAAC,CAAC;QACF,CAAC;MACH,EAAE,OAAOC,KAAK,EAAE;QACdF,KAAK,CAACE,KAAK,CAAC;MAChB;IACF;EACF;AACA,CAAC,CAAC","names":["IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonButton","IonIcon","defineComponent","cameraOutline","MediaCapture","Capacitor","axios","name","components","data","videoInfo","icon","md","ios","methods","takeVideo","options","duration","limit","quality","result","captureVideo","blob","fetch","convertFileSrc","fullPath","then","r","formData","FormData","append","reader","FileReader","readAsDataURL","onloadend","base64data","trimmed","substring","indexOf","console","log","method","url","JSON","stringify","_data","headers","response","alert","status","error"],"sourceRoot":"","sources":["C:\\Users\\akars\\OneDrive\\Documents\\GitHub\\hacked-beta\\frontend\\ASLlingo\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\n  <ion-page>\n    <ion-header :translucent=\"true\">\n      <ion-toolbar>\n        <ion-title>Camera Test</ion-title>\n      </ion-toolbar>\n    </ion-header>\n    \n    <ion-content :fullscreen=\"true\">\n      <ion-header collapse=\"condense\">\n        <ion-toolbar>\n          <ion-title size=\"large\">Camera Test</ion-title>\n        </ion-toolbar>\n      </ion-header>\n    \n      <div id=\"container\">\n        <ion-button @click=\"takeVideo\" shape=\"circle\">\n          <ion-icon :md=\"icon.md\" :ios=\"icon.ios\"></ion-icon>\n        </ion-button>\n        <br/>\n        <strong>Click the button</strong>\n        <p> You<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.google.com/\"> Fool</a></p>\n        <p>{{JSON.stringify(videoInfo)}}</p>\n      </div>\n\n    </ion-content>\n  </ion-page>\n</template>\n\n<script>\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonButton, IonIcon } from '@ionic/vue';\nimport { defineComponent } from 'vue';\nimport { cameraOutline  } from 'ionicons/icons';\nimport {MediaCapture} from '@awesome-cordova-plugins/media-capture';\nimport {Capacitor} from '@capacitor/core';\nimport axios from 'axios';\n\nexport default defineComponent({\n  name: 'HomePage',\n  components: {\n    IonContent,\n    IonIcon,\n    IonButton,\n    IonHeader,\n    IonPage,\n    IonTitle,\n    IonToolbar\n  },\n  data() {\n    return {\n      videoInfo: {},\n      icon: {\n        md: cameraOutline,\n        ios: cameraOutline\n      }\n    }\n  },\n  methods: {\n    \n    takeVideo: async function () {``\n      \n      try {\n        const options = {\n          duration: 10,\n          limit: 1,\n          quality: 1\n        };\n        const result = await MediaCapture.captureVideo(options);\n        this.videoInfo = result[0];\n        // console.log(\"videoInfo\", JSON.stringify(result[0]));\n        const blob = await fetch(\n          Capacitor.convertFileSrc(this.videoInfo.fullPath)\n        ).then(r => r.blob());\n        const formData = new FormData();\n        formData.append(\"file\", blob, this.videoInfo.name);\n        // convert video blob to base64\n        let reader = new FileReader();\n        reader.readAsDataURL(blob);\n        reader.onloadend = async function() {\n          let base64data = reader.result;\n          let trimmed = base64data.substring(base64data.indexOf(\",\") + 1);\n          console.log(trimmed);\n        axios({\n          method: \"post\",\n          url: \"https://8690-2620-101-c040-85c-d547-3027-b598-c03a.ngrok.io/upload/\",\n          data: JSON.stringify({\n            _data: trimmed\n          }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n        }).then((response) => {\n          alert(response.status);\n        });\n        };\n      } catch (error) {\n        alert(error);\n    }\n  }\n}\n});\n</script>\n\n<style scoped>\n#container {\n  text-align: center;\n  \n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n#container strong {\n  font-size: 20px;\n  line-height: 26px;\n}\n\n#container p {\n  font-size: 16px;\n  line-height: 22px;\n  \n  color: #8c8c8c;\n  \n  margin: 0;\n}\n\n#container a {\n  text-decoration: none;\n}\nion-button [shape=circle] {\n  border-radius: 100% !important;\n  width: 56px;\n  height: 56px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}