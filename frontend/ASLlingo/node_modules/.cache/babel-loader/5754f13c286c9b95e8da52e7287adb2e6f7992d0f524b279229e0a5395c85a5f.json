{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-c6bdc170\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"box\",\n  id: \"container\"\n}, \" some text here \", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  alt: \"Silhouette of mountains\",\n  src: \"https://ionicframework.com/docs/img/demos/thumbnail.svg\"\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_card_subtitle = _resolveComponent(\"ion-card-subtitle\");\n  const _component_ion_card_title = _resolveComponent(\"ion-card-title\");\n  const _component_ion_card_header = _resolveComponent(\"ion-card-header\");\n  const _component_ion_text = _resolveComponent(\"ion-text\");\n  const _component_ion_col = _resolveComponent(\"ion-col\");\n  const _component_ion_thumbnail = _resolveComponent(\"ion-thumbnail\");\n  const _component_ion_row = _resolveComponent(\"ion-row\");\n  const _component_ion_grid = _resolveComponent(\"ion-grid\");\n  const _component_ion_card_content = _resolveComponent(\"ion-card-content\");\n  const _component_ion_card = _resolveComponent(\"ion-card\");\n  const _component_ion_content = _resolveComponent(\"ion-content\");\n  const _component_ion_page = _resolveComponent(\"ion-page\");\n  return _openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [_createVNode(_component_ion_content, {\n      fullscreen: true\n    }, {\n      default: _withCtx(() => [_hoisted_1, _createCommentVNode(\" create a card with a for loop \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.items, item => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: item.id\n        }, [_createVNode(_component_ion_card, {\n          onClick: $event => _ctx.openModal(item.id, item.title, item.question, item.difficulty, item.color)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_ion_card_header, null, {\n            default: _withCtx(() => [_createVNode(_component_ion_card_subtitle, null, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(item.title), 1 /* TEXT */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_ion_card_title, null, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(item.question), 1 /* TEXT */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_ion_card_content, null, {\n            default: _withCtx(() => [_createVNode(_component_ion_grid, null, {\n              default: _withCtx(() => [_createVNode(_component_ion_row, null, {\n                default: _withCtx(() => [_createVNode(_component_ion_col, null, {\n                  default: _withCtx(() => [_createVNode(_component_ion_text, {\n                    color: item.color\n                  }, {\n                    default: _withCtx(() => [_createElementVNode(\"p\", null, _toDisplayString(item.difficulty), 1 /* TEXT */)]),\n\n                    _: 2 /* DYNAMIC */\n                  }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"color\"])]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_ion_col), _createVNode(_component_ion_col, {\n                  class: \"ion-no-padding\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_ion_thumbnail, null, {\n                    default: _withCtx(() => [_hoisted_2]),\n                    _: 1 /* STABLE */\n                  })]),\n\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]),\n\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;gEAGMA,oBAEM;EAFDC,KAAK,EAAC,KAAK;EAACC,EAAE,EAAC;GAAY,kBAEhC;gEAqBQF,oBAAmG;EAA9FG,GAAG,EAAC,yBAAyB;EAACC,GAAG,EAAC;;;;;;;;;;;;;;;;uBAzBnDC,aAuCWC;sBAtCT,MAqCc,CArCdC,aAqCcC;MArCAC,UAAU,EAAE;IAAI;wBAC5B,MAEM,CAFNC,UAEM,EACNC,sDAAsC,qBACtCC,oBA4BMC,6BA5BcC,UAAK,EAAbC,IAAI;6BAAhBH,oBA4BM;UA5BsBI,GAAG,EAAED,IAAI,CAACb;YACpCK,aA0BWU;UA1BAC,OAAK,YAAEJ,cAAS,CAACC,IAAI,CAACb,EAAE,EAAEa,IAAI,CAACI,KAAK,EAAEJ,IAAI,CAACK,QAAQ,EAAEL,IAAI,CAACM,UAAU,EAAEN,IAAI,CAACO,KAAK;;4BACzF,MAIkB,CAJlBf,aAIkBgB;8BAHhB,MAAqD,CAArDhB,aAAqDiB;gCAAlC,MAAc,mCAAZT,IAAI,CAACI,KAAK;;;0CAC/BZ,aAAkDkB;gCAAlC,MAAiB,mCAAfV,IAAI,CAACK,QAAQ;;;;;;wCAGjCb,aAmBmBmB;8BAlBjB,MAgBW,CAhBXnB,aAgBWoB;gCAfT,MAcU,CAdVpB,aAcUqB;kCAbR,MAKU,CALVrB,aAKUsB;oCAJR,MAEW,CAFXtB,aAEWuB;oBAFAR,KAAK,EAAEP,IAAI,CAACO;;sCACrB,MAA0B,CAA1BtB,oBAA0B,4BAArBe,IAAI,CAACM,UAAU;;;;;8CAIxBd,aAAmBsB,qBACnBtB,aAIUsB;kBAJD5B,KAAK,EAAC;gBAAgB;oCAC7B,MAEW,CAFXM,aAEWwB;sCADf,MAAmG,CAAnGC,UAAmG","names":["_createElementVNode","class","id","alt","src","_createBlock","_component_ion_page","_createVNode","_component_ion_content","fullscreen","_hoisted_1","_createCommentVNode","_createElementBlock","_Fragment","_ctx","item","key","_component_ion_card","onClick","title","question","difficulty","color","_component_ion_card_header","_component_ion_card_subtitle","_component_ion_card_title","_component_ion_card_content","_component_ion_grid","_component_ion_row","_component_ion_col","_component_ion_text","_component_ion_thumbnail","_hoisted_2"],"sourceRoot":"","sources":["C:\\Users\\akars\\OneDrive\\Documents\\GitHub\\hacked-beta\\frontend\\ASLlingo\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\n  <ion-page>\n    <ion-content :fullscreen=\"true\">\n      <div class=\"box\" id=\"container\">\n        some text here\n      </div>\n      <!-- create a card with a for loop -->\n      <div v-for=\"item in items\" :key=\"item.id\">\n        <ion-card @click=\"openModal(item.id, item.title, item.question, item.difficulty, item.color)\" >\n          <ion-card-header>\n            <ion-card-subtitle>{{item.title}}</ion-card-subtitle>\n            <ion-card-title>{{item.question}}</ion-card-title>\n            \n          </ion-card-header>\n          <ion-card-content>\n            <ion-grid>\n              <ion-row>\n                <ion-col>\n                  <ion-text :color=\"item.color\">\n                    <p>{{item.difficulty}}</p>\n                  </ion-text>\n                  \n                </ion-col>\n                <ion-col></ion-col>\n                <ion-col class=\"ion-no-padding\">\n                  <ion-thumbnail >\n              <img alt=\"Silhouette of mountains\" src=\"https://ionicframework.com/docs/img/demos/thumbnail.svg\" />\n            </ion-thumbnail >\n                </ion-col>\n\n              </ion-row>\n            </ion-grid>\n            \n          </ion-card-content>\n        </ion-card>\n      </div>\n\n  \n\n    </ion-content>\n  </ion-page>\n</template>\n\n<script>\n  import { IonContent, IonPage, IonCard, IonCardContent, IonCardTitle, IonCardSubtitle, IonThumbnail, modalController} from '@ionic/vue';\n  import Modal from '../components/ModalComponent.vue';\n  import { defineComponent } from 'vue';\n  export default defineComponent({\n    name: 'HomePage',\n    components: {\n      IonContent,\n      IonThumbnail,\n      IonPage,\n      IonCard,\n      IonCardContent,\n      IonCardTitle,\n      IonCardSubtitle\n\n    },\n    data() {\n      return {\n        items: [\n          {id: 1, title: 'Question 1', difficulty: 'Easy', question: 'What does the fox say? Answer the question ', color: 'success'},\n          {id: 2,title: 'Question 2', difficulty: 'Easy', question: 'What does the fox say? Answer the question ', color: 'success'},\n          {id: 3,title: 'Question 3', difficulty: 'Hard', question: 'What does the fox say? Answer the question ', color: 'danger'},\n          {id: 4,title: 'Question 4', difficulty: 'Medium', question: 'What does the fox say? Answer the question ', color: 'warning'},\n          {id: 5,title: 'Question 5', difficulty: 'Easy', question: 'What does the fox say? Answer the question ', color: 'success'},\n          {id: 6,title: 'Question 6', difficulty: 'Hard', question: 'What does the fox say? Answer the question ', color: 'warning'},\n          {id: 7,title: 'Question 7', difficulty: 'Medium', question: 'What does the fox say? Answer the question ', color: 'warning'},\n          {id: 8,title: 'Question 8', difficulty: 'Hard', question: 'What does the fox say? Answer the question ', color: 'danger'},\n          {id: 9,title: 'Question 9', difficulty: 'Hard', question: 'What does the fox say? Answer the question ', color: 'danger'},\n          {id: 10,title: 'Question 10', difficulty: 'Easy', question: 'What does the fox say? Answer the question ', color: 'success'}\n          \n        ]\n      }\n    },\n    methods: {\n      async openModal(id, title, question, difficulty, color) {\n        const modal = await modalController.create({\n          component: Modal,\n          componentProps: {\n            id : id,\n            title : title,\n            question :  question,\n            difficulty : difficulty,\n            color : color\n          }\n        });\n      modal.present();\n      // const { data, role } = await modal.onWillDismiss();\n      // alert(JSON.stringify(role)) IDEA: use this to get the data back from the modal and display something then\n      // console.log(data)\n      \n      }\n    }\n  })\n</script>\n\n<style scoped>\nion-content{ \n  font-family: 'Roboto', sans-serif !important;\n  font-size:2em;\n}\n.box {\n  width:100vw;\n  height:20rem;\n  display:inline-block;\n  padding-top:10px;\n  background:radial-gradient(100% 35% at top,#ff7454 97%,transparent 100%);\n}\nion-thumbnail {\n  --size: 50px;\n  --border-radius: 14px;\n}\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}